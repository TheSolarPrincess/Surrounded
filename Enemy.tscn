[gd_scene load_steps=4 format=2]

[ext_resource path="res://Enemy.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export(Vector2) var fly_direction = Vector2(1,0.5)
export(float) var speed = 200
export(float) var noise = 5

signal dead

onready var rng = RandomNumberGenerator.new()

func _physics_process(delta):
	rng.randomize()
	var random_precession = rng.randf_range(-noise, noise)
	var moving_vector = (fly_direction.normalized() * speed * delta).rotated(random_precession * delta)
	var test_collision = self.move_and_collide(moving_vector, true, true, true)
	if test_collision != null:
		var collide_normal = test_collision.get_normal()
		moving_vector = moving_vector.bounce(collide_normal).rotated(random_precession)
	fly_direction = moving_vector.normalized()
	self.move_and_collide(moving_vector, true, true, false)
	check_line_intersect(moving_vector)
	
func check_line_intersect(moving_vector:Vector2):
	#print(get_tree().get_nodes_in_group(\"theline\"))
	var line:Line2D = get_tree().get_nodes_in_group(\"theline\")[0]
	
	for i in range(2, line.points.size()-1):
		var start = line.points[i-1]
		var end   = line.points[i]
		var intersection = (Geometry.segment_intersects_segment_2d (start, end, position, position+moving_vector))
		if intersection != null:
			get_tree().get_nodes_in_group(\"drawbox\")[0].interrupt(self)
			break
	
func areactivate():
	print(\"ded\")
	queue_free()
	emit_signal(\"dead\")
"

[sub_resource type="CircleShape2D" id=2]
radius = 10.104

[node name="Enemy" type="KinematicBody2D" groups=[
"areactivatable",
"enemies",
]]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 0.065, 0.065 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -0.116089, -0.0238229 )
shape = SubResource( 2 )
